{"version":3,"sources":["components/Footer.js","components/Hero.js","pages/HomePage.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","text","HomePage","AboutPage","ContactPage","App","state","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2ea5269.chunk.js","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router , Route, Link} from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {Row , Col} from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"mt-5\">\r\n        <Container fluid={true}>\r\n            <Row  className=\"border-top justify-content-between p-3\" >\r\n                <Col className=\"p-0\" md= {3} sm={12}>\r\n                    Mustafa YILDIRIM\r\n                </Col>\r\n                <Col className=\"p-0 d-flex justify-content-end\" md= {3} >\r\n                    This site is made using ReactJs \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { BrowserRouter as Router , Route, Link} from 'react-router-dom';\r\nimport {Jumbotron,Container} from 'react-bootstrap';\r\nimport {Row , Col} from 'react-bootstrap';\r\n\r\nfunction Hero(props) {\r\n    return (\r\n        <Jumbotron className = \"bg-transparent jumbotron-fluid p-0\">\r\n            <Container fluid={true}>\r\n                <Row className = \"justify-content-center\">\r\n                    <Col md={8} sm={12}>\r\n                        {props.title && <h1 className = \"display-1 font-weight-bolder\">{props.title}</h1>}\r\n                        {props.subTitle && <h1 className = \"display-4 font-weight-light\" >{props.subTitle}</h1>}\r\n                        {props.text && <h1 className = \"lead font-weight-light\">{props.text}</h1>}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport { BrowserRouter as Router , Route, Link} from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {Row , Col} from 'react-bootstrap';\r\nimport Hero from '../components/Hero';\r\n\r\nfunction HomePage(props){\r\n    return (\r\n        <Hero title ={props.title} subTitle = {props.subTitle} text = {props.text}/>\r\n    );\r\n}\r\nexport default HomePage;","import React from 'react';\r\n\r\nfunction AboutPage(props) {\r\n\r\n\r\n    return (\r\n        <p> AboutPage Test</p>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { BrowserRouter as Router , Route, Link} from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {Row , Col} from 'react-bootstrap';\r\n\r\nfunction ContactPage(props){\r\n    return (\r\n        <p> ContactPage Test</p>\r\n    );\r\n}\r\nexport default ContactPage;","import React from 'react';\r\nimport { BrowserRouter as Router , Switch , Route, Link} from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {Navbar , Nav} from 'react-bootstrap'\r\nimport './App.css';\r\nimport Footer  from './components/Footer'\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport ContactPage from './pages/ContactPage';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      title : 'Mustafa YILDIRIM',\r\n      headerLinks : [\r\n        {title : 'Home' , path: '/' },\r\n        {title : 'About' , path: '/about' },\r\n        {title : 'Contact' , path: '/contact' },\r\n      ],\r\n      home : {\r\n        title : 'Mustafa...',\r\n        subTitle: 'Hi earhtlings, I am your friend',\r\n        text: 'This is the place where you want to know me. Please click every possible button. Report me the bugs :)'\r\n      },\r\n      about : {\r\n        title : 'Be relentlers ',\r\n        subTitle: 'Projects the make a difference',\r\n        text: 'This is me we will start'\r\n      },\r\n      contact : {\r\n        title : 'Be relentlers ',\r\n        subTitle: 'Projects the make a difference',\r\n        text: 'This is me we will start'\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <Container className= \"p-0\" fluid={true}> \r\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\r\n            <Navbar.Brand>Mustafa YILDIRIM</Navbar.Brand>\r\n\r\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\r\n            <Navbar.Collapse id=\"navbar-toggle\">\r\n              <Nav className=\"ml-auto\">\r\n                <Link className=\"nav-link\" to=\"/about-me\">Home</Link>\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\r\n\r\n                \r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n           <Route path=\"/about-me\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} />} />\r\n          <Route path=\"/about\" exact render={() => <AboutPage title={this.state.about.title} subTitle={this.state.about.subTitle} text={this.state.about.text} />} />\r\n          <Route path=\"/contact\" exact render={() => <ContactPage title={this.state.contact.title} subTitle={this.state.contact.subTitle} text={this.state.contact.text} />} />\r\n          <Footer/>\r\n\r\n          </Container>\r\n        </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}